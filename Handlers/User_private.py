from aiogram import types, Router, F, Bot
from aiogram.filters import CommandStart, or_f

from kb.inline import get_agree_button, get_choice_mod, get_back_button, get_cities_menu_keyboard, \
    get_type_menu_keyboard, get_placesmenu_by_parms, get_info_about_place
from settings import Places

UserPrivate = Router()

IsAgree = False
PlacePar=[None,None]
photo_to_del=None

@UserPrivate.message(F.photo)
async def get_photo(msg: types.Message):
    await msg.answer(f'ID —Ñ–æ—Ç–æ: {msg.photo[-1].file_id}')
@UserPrivate.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ')
    await message.answer('–ü–æ–º–Ω–∏—Ç–µ:\n  *–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –∫–∞—Ä—Ç—ã –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω, –∞ —Å–∫–∏–¥–∫–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∫–∞—Ä—Ç–µ –≥–æ—Å—Ç—è '
                         '–æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –µ–∂–µ–≥–æ–¥–Ω–æ.\n  *–ü–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞—Ä—Ç–æ–π –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –≥–æ—Å—Ç–∏ –≥–æ—Ä–æ–¥–∞. '
                         '–ö–∞—Ä—Ç—É –≥–æ—Å—Ç—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∑–∞—Ä–∞–Ω–µ–µ –¥–æ –æ–ø–ª–∞—Ç—ã —É—Å–ª—É–≥ –∏ –∑–∞–∫–ª—é—á–µ–Ω–∏—è –¥–æ–≥–æ–≤–æ—Ä–æ–≤.\n'
                         '(–Ω–∞–∂–º–∏—Ç–µ "–ø–æ—á–∏—Ç–∞–Ω–æ", —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º)', reply_markup=get_agree_button())

@UserPrivate.callback_query(F.data == "agree")
async def agree_handle(callback: types.CallbackQuery):
    await callback.answer()
    IsAgree = True
    await callback.message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫—É—é –æ–±–ª–∞—Å—Ç—åüëã', reply_markup=get_choice_mod())
    await callback.message.delete()

@UserPrivate.callback_query(F.data == "card_work")
async def cardwork_handle(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–ö–∞—Ä—Ç–∞ –≥–æ—Å—Ç—è –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏ ‚Äì –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏, '
                                  '–±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–π —Ç—É—Ä–∏—Å—Ç—ã –ø–æ–ª—É—á–∞—é—Ç –ø—Ä–∏—è—Ç–Ω—ã–µ –±–æ–Ω—É—Å—ã –∏ —Å–∫–∏–¥–∫–∏ –Ω–∞ –ª—É—á—à–∏–µ '
                                  '—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–∞!\n–ö–∞—Ä—Ç–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –≤ –∑–∞–≤–µ–¥–µ–Ω–∏—è—Ö-—É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö '
                                  '–ø—Ä–æ–≥—Ä–∞–º–º—ã, —Å–∫–∏–¥–∫–æ–π –º–æ–∂–Ω–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ', reply_markup=get_back_button(1))

@UserPrivate.callback_query(or_f(F.data == "back_1", F.data == "back_2"))
async def back12_handle(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–∞–ª–∏–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫—É—é –æ–±–ª–∞—Å—Ç—åüëã', reply_markup=get_choice_mod())

@UserPrivate.callback_query(F.data == "start_work")
async def startwork_handle(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–µ—Ç–µ –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å:', reply_markup=get_cities_menu_keyboard())

#@UserPrivate.callback_query(F.data == "klgd" or F.data == "zel" or F.data == "sve" or F.data == 'yant' or F.data == "pol" or F.data == "cher")
@UserPrivate.callback_query(or_f(F.data == "klgd", F.data == "zel", F.data == "sve", F.data == 'yant',
                                 F.data == "pol", F.data == "cher", F.data == "all_cyt"))
async def citiesmenu_handle(callback: types.CallbackQuery):
    await callback.answer()
    PlacePar[0]=callback.data
    await callback.message.edit_text('–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å:', reply_markup=get_type_menu_keyboard())

@UserPrivate.callback_query(or_f(F.data == "kult", F.data ==  "ent", F.data ==  "food", F.data ==  'liv', F.data ==  "driv",
                            F.data == "SPA", F.data == "suv", F.data == "tur", F.data == "all_typ"))
async def typemenu_handle(callback: types.CallbackQuery):
    await callback.answer()
    PlacePar[1]=callback.data
    await callback.message.edit_text('–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—é—é—â–∏–µ –º–µ—Å—Ç–æ:', reply_markup=get_placesmenu_by_parms(PlacePar))

@UserPrivate.callback_query(F.data == "back_3")
async def back3_handle(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–µ—Ç–µ –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å:',
                                     reply_markup=get_cities_menu_keyboard())
@UserPrivate.callback_query(F.data == "back_4")
async def back4_handle(callback: types.CallbackQuery):
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å:', reply_markup=get_type_menu_keyboard())

@UserPrivate.callback_query(or_f(F.data == '0', F.data == '1', F.data== '2', F.data == '3', F.data== '4', F.data == '5', F.data== '6', F.data == '7', F.data== '8', F.data == '9', F.data== '10', F.data == '11', F.data== '12'))
async def place_info_handle(callback: types.CallbackQuery, bot : Bot):
    await callback.answer()
    place_now=Places[int(callback.data)]
    await callback.message.edit_text(f"C–ö–ò–î–ö–ê {place_now[4]}%!!\n{place_now[0]} - —ç—Ç–æ {place_now[2]}.\n–ù–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—Å—É: {place_now[1]}.\n"
                                     f"–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ —ç—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: {place_now[3]}\n–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ–± —ç—Ç–æ–º –º–µ—Å—Ç–µ?", reply_markup=get_info_about_place(place_now))

@UserPrivate.callback_query(F.data == "back_5")
async def back5_handle(callback: types.CallbackQuery, bot : Bot):
    await callback.answer()
    await callback.message.edit_text('–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—é—é—â–∏–µ –º–µ—Å—Ç–æ:', reply_markup=get_placesmenu_by_parms(PlacePar))
    await bot.delete_message(callback.message.chat.id, callback.message.message_id+1)